binmode		http://perldoc.perl.org/./download/functions/functions_binmode.html.html	Arranges for FILEHANDLE to be read or written in "binary" or "text" mode on systems where the run-time libraries distinguish between binary and text files.  If FILEHANDLE is an expression, the value is taken as the name of the filehandle.  Returns true on success, otherwise it returns undef and sets $! (errno).	binmode FILEHANDLE, LAYER__NEWLINE__binmode FILEHANDLE		perl5	en
while		http://perldoc.perl.org/./download/functions/functions_while.html.html	These flow-control keywords are documented in Compound Statements in perlsyn.	while		perl5	en
dbmopen		http://perldoc.perl.org/./download/functions/functions_dbmopen.html.html	[This function has been largely superseded by the tie function.]	dbmopen HASH,DBNAME,MASK		perl5	en
given		http://perldoc.perl.org/./download/functions/functions_given.html.html	These flow-control keywords related to the experimental switch feature are documented in Switch Statements in perlsyn.	given		perl5	en
read		http://perldoc.perl.org/./download/functions/functions_read.html.html	Attempts to read LENGTH characters of data into variable SCALAR from the specified FILEHANDLE.  Returns the number of characters actually read, 0 at end of file, or undef if there was an error (in the latter case $! is also set).  SCALAR will be grown or shrunk so that the last character actually read is the last character of the scalar after the read.	read FILEHANDLE,SCALAR,LENGTH,OFFSET__NEWLINE__read FILEHANDLE,SCALAR,LENGTH		perl5	en
join		http://perldoc.perl.org/./download/functions/functions_join.html.html	Joins the separate strings of LIST into a single string with fields separated by the value of EXPR, and returns that new string.  Example...	join EXPR,LIST		perl5	en
printf		http://perldoc.perl.org/./download/functions/functions_printf.html.html	Equivalent to print FILEHANDLE sprintf(FORMAT, LIST) , except that $\  (the output record separator) is not appended.  The FORMAT and the LIST are actually parsed as a single list.  The first argument of the list will be interpreted as the printf format.  This means that printf(@_) will use $_[0] as the format.  See sprintf for an explanation of the format argument.  If use locale for LC_NUMERIC  Look for this throught pod is in effect and POSIX::setlocale() has been called, the character used for the decimal separator in formatted floating-point numbers is affected by the LC_NUMERIC  locale setting.  See perllocale and POSIX.	printf FILEHANDLE FORMAT, LIST__NEWLINE__printf FILEHANDLE__NEWLINE__printf FORMAT, LIST__NEWLINE__printf		perl5	en
q		http://perldoc.perl.org/./download/functions/functions_q.html.html	Equivalent to print FILEHANDLE sprintf(FORMAT, LIST) , except that $\  (the output record separator) is not appended.  The FORMAT and the LIST are actually parsed as a single list.  The first argument of the list will be interpreted as the printf format.  This means that printf(@_) will use $_[0] as the format.  See sprintf for an explanation of the format argument.  If use locale for LC_NUMERIC  Look for this throught pod is in effect and POSIX::setlocale() has been called, the character used for the decimal separator in formatted floating-point numbers is affected by the LC_NUMERIC  locale setting.  See perllocale and POSIX.	q/STRING/		perl5	en
msgget		http://perldoc.perl.org/./download/functions/functions_msgget.html.html	Calls the System V IPC function msgget(2).  Returns the message queue id, or undef on error.  See also SysV IPC in perlipc and the documentation for IPC::SysV and IPC::Msg .	msgget KEY,FLAGS		perl5	en
bind		http://perldoc.perl.org/./download/functions/functions_bind.html.html	Binds a network address to a socket, just as bind(2) does.  Returns true if it succeeded, false otherwise.  NAME should be a packed address of the appropriate type for the socket.  See the examples in Sockets: Client/Server Communication in perlipc.	bind SOCKET,NAME		perl5	en
rmdir		http://perldoc.perl.org/./download/functions/functions_rmdir.html.html	Deletes the directory specified by FILENAME if that directory is empty.  If it succeeds it returns true; otherwise it returns false and sets $! (errno).  If FILENAME is omitted, uses $_ .	rmdir FILENAME__NEWLINE__rmdir		perl5	en
stat		http://perldoc.perl.org/./download/functions/functions_stat.html.html	Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR.  If EXPR is omitted, it stats $_ (not _ !).  Returns the empty list if stat fails.  Typically used as follows...	stat FILEHANDLE__NEWLINE__stat EXPR__NEWLINE__stat DIRHANDLE__NEWLINE__stat		perl5	en
setprotoent		http://perldoc.perl.org/./download/functions/functions_setprotoent.html.html	Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR.  If EXPR is omitted, it stats $_ (not _ !).  Returns the empty list if stat fails.  Typically used as follows...	setprotoent STAYOPEN		perl5	en
sub		http://perldoc.perl.org/./download/functions/functions_sub.html.html	This is subroutine definition, not a real function per se.  Without a BLOCK its just a forward declaration.  Without a NAME, its an anonymous function declaration, so does return a value: the CODE ref of the closure just created.	sub NAME BLOCK__NEWLINE__sub NAME (PROTO) BLOCK__NEWLINE__sub NAME : ATTRS BLOCK__NEWLINE__sub NAME (PROTO) : ATTRS BLOCK		perl5	en
qq		http://perldoc.perl.org/./download/functions/functions_qq.html.html	This is subroutine definition, not a real function per se.  Without a BLOCK its just a forward declaration.  Without a NAME, its an anonymous function declaration, so does return a value: the CODE ref of the closure just created.	qq/STRING/		perl5	en
use		http://perldoc.perl.org/./download/functions/functions_use.html.html	Imports some semantics into the current package from the named module, generally by aliasing certain subroutine or variable names into your package.  It is exactly equivalent to	use Module VERSION LIST__NEWLINE__use Module VERSION__NEWLINE__use Module LIST__NEWLINE__use Module__NEWLINE__use VERSION		perl5	en
redo		http://perldoc.perl.org/./download/functions/functions_redo.html.html	The redo command restarts the loop block without evaluating the conditional again.  The continue block, if any, is not executed.  If the LABEL is omitted, the command refers to the innermost enclosing loop.  The redo EXPR form, available starting in Perl 5.18.0, allows a label name to be computed at run time, and is otherwise identical to redo LABEL .  Programs that want to lie to themselves about what was just input normally use this command...	redo LABEL__NEWLINE__redo EXPR__NEWLINE__redo		perl5	en
msgctl		http://perldoc.perl.org/./download/functions/functions_msgctl.html.html	Calls the System V IPC function msgctl(2).  Youll probably have to say	msgctl ID,CMD,ARG		perl5	en
chomp		http://perldoc.perl.org/./download/functions/functions_chomp.html.html	This safer version of chop removes any trailing string that corresponds to the current value of $/ (also known as $INPUT_RECORD_SEPARATOR in the English module).  It returns the total number of characters removed from all its arguments.  Its often used to remove the newline from the end of an input record when youre worried that the final record may be missing its newline.  When in paragraph mode ($/ = &#39;&#39; ), it removes all trailing newlines from the string. When in slurp mode ($/ = undef ) or fixed-length record mode ($/ is a reference to an integer or the like; see perlvar) chomp() wont remove anything. If VARIABLE is omitted, it chomps $_ .  Example...	chomp VARIABLE__NEWLINE__chomp( LIST )__NEWLINE__chomp		perl5	en
ord		http://perldoc.perl.org/./download/functions/functions_ord.html.html	Returns the numeric value of the first character of EXPR. If EXPR is an empty string, returns 0.  If EXPR is omitted, uses $_ . (Note character, not byte.)	ord EXPR__NEWLINE__ord		perl5	en
setpgrp		http://perldoc.perl.org/./download/functions/functions_setpgrp.html.html	Sets the current process group for the specified PID, 0 for the current process.  Raises an exception when used on a machine that doesnt implement POSIX setpgid(2) or BSD setpgrp(2).  If the arguments are omitted, it defaults to 0,0 .  Note that the BSD 4.2 version of setpgrp does not accept any arguments, so only setpgrp(0,0) is portable.  See also POSIX::setsid() .	setpgrp PID,PGRP		perl5	en
chown		http://perldoc.perl.org/./download/functions/functions_chown.html.html	Changes the owner (and group) of a list of files.  The first two elements of the list must be the numeric uid and gid, in that order.  A value of -1 in either position is interpreted by most systems to leave that value unchanged.  Returns the number of files successfully changed.	chown LIST		perl5	en
fork		http://perldoc.perl.org/./download/functions/functions_fork.html.html	Does a fork(2) system call to create a new process running the same program at the same point.  It returns the child pid to the parent process, 0 to the child process, or undef if the fork is unsuccessful.  File descriptors (and sometimes locks on those descriptors) are shared, while everything else is copied.  On most systems supporting fork(), great care has gone into making it extremely efficient (for example, using copy-on-write technology on data pages), making it the dominant paradigm for multitasking over the last few decades.	fork		perl5	en
pipe		http://perldoc.perl.org/./download/functions/functions_pipe.html.html	Opens a pair of connected pipes like the corresponding system call. Note that if you set up a loop of piped processes, deadlock can occur unless you are very careful.  In addition, note that Perls pipes use IO buffering, so you may need to set $| to flush your WRITEHANDLE after each command, depending on the application.	pipe READHANDLE,WRITEHANDLE		perl5	en
substr		http://perldoc.perl.org/./download/functions/functions_substr.html.html	Extracts a substring out of EXPR and returns it.  First character is at offset zero.  If OFFSET is negative, starts that far back from the end of the string.  If LENGTH is omitted, returns everything through the end of the string.  If LENGTH is negative, leaves that many characters off the end of the string.	substr EXPR,OFFSET,LENGTH,REPLACEMENT__NEWLINE__substr EXPR,OFFSET,LENGTH__NEWLINE__substr EXPR,OFFSET		perl5	en
bless		http://perldoc.perl.org/./download/functions/functions_bless.html.html	This function tells the thingy referenced by REF that it is now an object in the CLASSNAME package.  If CLASSNAME is omitted, the current package is used.  Because a bless is often the last thing in a constructor, it returns the reference for convenience.  Always use the two-argument version if a derived class might inherit the function doing the blessing. See perlobj for more about the blessing (and blessings) of objects.	bless REF,CLASSNAME__NEWLINE__bless REF		perl5	en
tied		http://perldoc.perl.org/./download/functions/functions_tied.html.html	Returns a reference to the object underlying VARIABLE (the same value that was originally returned by the tie call that bound the variable to a package.)  Returns the undefined value if VARIABLE isnt tied to a package.	tied VARIABLE		perl5	en
CHECK		http://perldoc.perl.org/./download/functions/functions_CHECK.html.html	These compile phase keywords are documented in BEGIN, UNITCHECK, CHECK, INIT and END in perlmod.	CHECK		perl5	en
vec		http://perldoc.perl.org/./download/functions/functions_vec.html.html	Treats the string in EXPR as a bit vector made up of elements of width BITS and returns the value of the element specified by OFFSET as an unsigned integer.  BITS therefore specifies the number of bits that are reserved for each element in the bit vector.  This must be a power of two from 1 to 32 (or 64, if your platform supports that).	vec EXPR,OFFSET,BITS		perl5	en
grep		http://perldoc.perl.org/./download/functions/functions_grep.html.html	This is similar in spirit to, but not the same as, grep(1) and its relatives.  In particular, it is not limited to using regular expressions.	grep BLOCK LIST__NEWLINE__grep EXPR,LIST		perl5	en
syscall		http://perldoc.perl.org/./download/functions/functions_syscall.html.html	Calls the system call specified as the first element of the list, passing the remaining elements as arguments to the system call.  If unimplemented, raises an exception.  The arguments are interpreted as follows: if a given argument is numeric, the argument is passed as an int.  If not, the pointer to the string value is passed.  You are responsible to make sure a string is pre-extended long enough to receive any result that might be written into a string.  You cant use a string literal (or other read-only string) as an argument to syscall because Perl has to assume that any string pointer might be written through.  If your integer arguments are not literals and have never been interpreted in a numeric context, you may need to add 0 to them to force them to look like numbers.  This emulates the syswrite function (or vice versa)...	syscall NUMBER, LIST		perl5	en
delete		http://perldoc.perl.org/./download/functions/functions_delete.html.html	Given an expression that specifies an element or slice of a hash, delete deletes the specified elements from that hash so that exists() on that element no longer returns true.  Setting a hash element to the undefined value does not remove its key, but deleting it does; see exists.	delete EXPR		perl5	en
endservent		http://perldoc.perl.org/./download/functions/functions_endservent.html.html	These routines are the same as their counterparts in the system C library.  In list context, the return values from the various get routines are as follows...	endservent		perl5	en
setgrent		http://perldoc.perl.org/./download/functions/functions_setgrent.html.html	These routines are the same as their counterparts in the system C library.  In list context, the return values from the various get routines are as follows...	setgrent		perl5	en
tie		http://perldoc.perl.org/./download/functions/functions_tie.html.html	This function binds a variable to a package class that will provide the implementation for the variable.  VARIABLE is the name of the variable to be enchanted.  CLASSNAME is the name of a class implementing objects of correct type.  Any additional arguments are passed to the appropriate constructor method of the class (meaning TIESCALAR , TIEHANDLE , TIEARRAY , or TIEHASH ).  Typically these are arguments such as might be passed to the dbm_open() function of C.  The object returned by the constructor is also returned by the tie function, which would be useful if you want to access other methods in CLASSNAME.	tie VARIABLE,CLASSNAME,LIST		perl5	en
seek		http://perldoc.perl.org/./download/functions/functions_seek.html.html	Sets FILEHANDLEs position, just like the fseek call of stdio . FILEHANDLE may be an expression whose value gives the name of the filehandle.  The values for WHENCE are 0 to set the new position in bytes to POSITION; 1 to set it to the current position plus POSITION; and 2 to set it to EOF plus POSITION, typically negative.  For WHENCE you may use the constants SEEK_SET , SEEK_CUR , and SEEK_END (start of the file, current position, end of the file) from the Fcntl module.  Returns 1 on success, false otherwise.	seek FILEHANDLE,POSITION,WHENCE		perl5	en
crypt		http://perldoc.perl.org/./download/functions/functions_crypt.html.html	Creates a digest string exactly like the crypt(3) function in the C library (assuming that you actually have a version there that has not been extirpated as a potential munition).	crypt PLAINTEXT,SALT		perl5	en
import		http://perldoc.perl.org/./download/functions/functions_import.html.html	There is no builtin import function.  It is just an ordinary method (subroutine) defined (or inherited) by modules that wish to export names to another module.  The use function calls the import method for the package used.  See also use, perlmod, and Exporter.	import LIST		perl5	en
getservent		http://perldoc.perl.org/./download/functions/functions_getservent.html.html	There is no builtin import function.  It is just an ordinary method (subroutine) defined (or inherited) by modules that wish to export names to another module.  The use function calls the import method for the package used.  See also use, perlmod, and Exporter.	getservent		perl5	en
map		http://perldoc.perl.org/./download/functions/functions_map.html.html	Evaluates the BLOCK or EXPR for each element of LIST (locally setting $_ to each element) and returns the list value composed of the results of each such evaluation.  In scalar context, returns the total number of elements so generated.  Evaluates BLOCK or EXPR in list context, so each element of LIST may produce zero, one, or more elements in the returned value.	map BLOCK LIST__NEWLINE__map EXPR,LIST		perl5	en
alarm		http://perldoc.perl.org/./download/functions/functions_alarm.html.html	Arranges to have a SIGALRM delivered to this process after the specified number of wallclock seconds has elapsed.  If SECONDS is not specified, the value stored in $_ is used.  (On some machines, unfortunately, the elapsed time may be up to one second less or more than you specified because of how seconds are counted, and process scheduling may delay the delivery of the signal even further.)	alarm SECONDS__NEWLINE__alarm		perl5	en
semctl		http://perldoc.perl.org/./download/functions/functions_semctl.html.html	Calls the System V IPC function semctl(2).  Youll probably have to say	semctl ID,SEMNUM,CMD,ARG		perl5	en
END		http://perldoc.perl.org/./download/functions/functions_END.html.html	These compile phase keywords are documented in BEGIN, UNITCHECK, CHECK, INIT and END in perlmod.	END		perl5	en
close		http://perldoc.perl.org/./download/functions/functions_close.html.html	Closes the file or pipe associated with the filehandle, flushes the IO buffers, and closes the system file descriptor.  Returns true if those operations succeed and if no error was reported by any PerlIO layer.  Closes the currently selected filehandle if the argument is omitted.	close FILEHANDLE__NEWLINE__close		perl5	en
